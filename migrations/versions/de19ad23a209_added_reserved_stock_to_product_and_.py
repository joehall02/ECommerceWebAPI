"""Added reserved stock to Product and locked/locked_at to Cart

Revision ID: de19ad23a209
Revises: abf52fa4b72b
Create Date: 2025-05-02 18:18:25.334846

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de19ad23a209'
down_revision = 'abf52fa4b72b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Cart', schema=None) as batch_op:
        batch_op.add_column(sa.Column('locked', sa.Boolean(), nullable=False, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('locked_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('product_added_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('Product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reserved_stock', sa.Integer(), nullable=False, server_default='0'))

    # Remove the server default after the columns are added
    op.execute('ALTER TABLE "Cart" ALTER COLUMN locked DROP DEFAULT')
    op.execute('ALTER TABLE "Product" ALTER COLUMN reserved_stock DROP DEFAULT')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Product', schema=None) as batch_op:
        batch_op.drop_column('reserved_stock')

    with op.batch_alter_table('Cart', schema=None) as batch_op:
        batch_op.drop_column('product_added_at')
        batch_op.drop_column('locked_at')
        batch_op.drop_column('locked')

    # ### end Alembic commands ###
