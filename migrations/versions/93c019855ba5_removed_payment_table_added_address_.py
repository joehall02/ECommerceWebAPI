"""Removed payment table. Added address details in order. Added product details to order item.

Revision ID: 93c019855ba5
Revises: b9f5c77bbaa4
Create Date: 2025-01-16 00:59:55.235573

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '93c019855ba5'
down_revision = 'b9f5c77bbaa4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Order', schema=None) as batch_op:
        batch_op.drop_constraint('Order_payment_id_fkey', type_='foreignkey')
        batch_op.drop_column('payment_id')
        batch_op.add_column(sa.Column('full_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('address_line_1', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('address_line_2', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('city', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('postcode', sa.String(length=20), nullable=False))

    # Drop the Payment table after removing the foreign key constraint
    op.drop_table('Payment')

    with op.batch_alter_table('Order_Item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.alter_column('product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('Order_Item_product_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Product', ['product_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Order_Item', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('Order_Item_product_id_fkey', 'Product', ['product_id'], ['id'])
        batch_op.alter_column('product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('name')

    with op.batch_alter_table('Order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('Order_payment_id_fkey', 'Payment', ['payment_id'], ['id'])
        batch_op.drop_column('postcode')
        batch_op.drop_column('city')
        batch_op.drop_column('address_line_2')
        batch_op.drop_column('address_line_1')
        batch_op.drop_column('full_name')

    op.create_table('Payment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stripe_payment_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Payment_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Payment_pkey')
    )
    # ### end Alembic commands ###
